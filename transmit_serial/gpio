#!/usr/bin/python3
# Copyright 2018 Alexander Wilhelmi
# This file is part of 433control.
# 
# 433control is free software: you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation, either version 3 of the License, or
# (at your option) any later version.
# 
# 433control is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
# 
# You should have received a copy of the GNU General Public License
# along with 433control.  If not, see <http://www.gnu.org/licenses/>.
# 
# Diese Datei ist Teil von 433control.
# 
# 433control ist Freie Software: Sie können es unter den Bedingungen
# der GNU General Public License, wie von der Free Software Foundation,
# Version 3 der Lizenz oder (nach Ihrer Wahl) jeder neueren
# veröffentlichten Version, weiter verteilen und/oder modifizieren.
# 
# 433control wird in der Hoffnung, dass es nützlich sein wird, aber
# OHNE JEDE GEWÄHRLEISTUNG, bereitgestellt; sogar ohne die implizite
# Gewährleistung der MARKTFÄHIGKEIT oder EIGNUNG FÜR EINEN BESTIMMTEN ZWECK.
# Siehe die GNU General Public License für weitere Details.
# 
# Sie sollten eine Kopie der GNU General Public License zusammen mit diesem
# Programm erhalten haben. Wenn nicht, siehe <https://www.gnu.org/licenses/>.
# Copyright 2018 Alexander Wilhelmi
# This file is part of 433control.
# 
# 433control is free software: you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation, either version 3 of the License, or
# (at your option) any later version.
# 
# 433control is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
# 
# You should have received a copy of the GNU General Public License
# along with 433control.  If not, see <http://www.gnu.org/licenses/>.
# 
# Diese Datei ist Teil von 433control.
# 
# 433control ist Freie Software: Sie können es unter den Bedingungen
# der GNU General Public License, wie von der Free Software Foundation,
# Version 3 der Lizenz oder (nach Ihrer Wahl) jeder neueren
# veröffentlichten Version, weiter verteilen und/oder modifizieren.
# 
# 433control wird in der Hoffnung, dass es nützlich sein wird, aber
# OHNE JEDE GEWÄHRLEISTUNG, bereitgestellt; sogar ohne die implizite
# Gewährleistung der MARKTFÄHIGKEIT oder EIGNUNG FÜR EINEN BESTIMMTEN ZWECK.
# Siehe die GNU General Public License für weitere Details.
# 
# Sie sollten eine Kopie der GNU General Public License zusammen mit diesem
# Programm erhalten haben. Wenn nicht, siehe <https://www.gnu.org/licenses/>.
intbytes=2
maxintsize=2**(intbytes*8)
byteorder="little"
baudrate=500000
import serial
from sys import argv
from argparse import ArgumentParser
ap=ArgumentParser()
ap.add_argument("-w","--write",action='store_true',default=False)
ap.add_argument("-r","--read",action='store_true',default=True)
ap.add_argument(dest="pin", nargs=1, type=str )
ap.add_argument(dest="data",nargs='?',default=None,type=int)
args=ap.parse_args()

s = serial.Serial(port='/dev/ttyACM0', baudrate=baudrate,timeout=0)

from time import sleep

for i in range(2):
    for i in s.readlines():
        print(i.decode(errors="replace"))
    sleep(2) 
hex_18=(0x18).to_bytes(1,'little')
zero=(0x00).to_bytes(1,'little')
ff=(0xFF).to_bytes(1,'little')
if args.write:
    hex_8f=(0x8F).to_bytes(1,'little')
    data=zero+zero+zero+ff+hex_8f+args.pin[0].encode('ascii')+args.data.to_bytes(1,'little')
elif args.read:
    hex_9f=(0x9F).to_bytes(1,'little')
    data=zero+zero+zero+ff+hex_9f+args.pin[0].encode('ascii')
else:
    raise Exception("ERROR: need one arg from [read,write]")
s.write(hex_18)
s.flush()
sleep(2)
s.write(data)
s.flush()
sleep(2)
s.write(zero)
s.write(hex_18)
s.flush()
for i in range(2):
    for i in s.readlines():
        print(i.decode(errors="replace"))
        sleep(1)
sleep(1)
for i in range(2):
    for i in s.readlines():
        print(i.decode(errors="replace"))
        sleep(1)
sleep(1)
s.close()
